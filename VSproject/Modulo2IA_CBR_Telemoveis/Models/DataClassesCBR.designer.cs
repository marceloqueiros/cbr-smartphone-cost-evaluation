#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Modulo2IA_CBR_Telemoveis.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CBRTelemoveis")]
	public partial class DataClassesCBRDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCamera(Camera instance);
    partial void UpdateCamera(Camera instance);
    partial void DeleteCamera(Camera instance);
    partial void InsertEcra(Ecra instance);
    partial void UpdateEcra(Ecra instance);
    partial void DeleteEcra(Ecra instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertProcessador(Processador instance);
    partial void UpdateProcessador(Processador instance);
    partial void DeleteProcessador(Processador instance);
    partial void Insertmarca(marca instance);
    partial void Updatemarca(marca instance);
    partial void Deletemarca(marca instance);
    partial void InsertResoluçãoEcra(ResoluçãoEcra instance);
    partial void UpdateResoluçãoEcra(ResoluçãoEcra instance);
    partial void DeleteResoluçãoEcra(ResoluçãoEcra instance);
    partial void InsertTelemovel(Telemovel instance);
    partial void UpdateTelemovel(Telemovel instance);
    partial void DeleteTelemovel(Telemovel instance);
    #endregion
		
		public DataClassesCBRDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CBRTelemoveisConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesCBRDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesCBRDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesCBRDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesCBRDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Camera> Cameras
		{
			get
			{
				return this.GetTable<Camera>();
			}
		}
		
		public System.Data.Linq.Table<Ecra> Ecras
		{
			get
			{
				return this.GetTable<Ecra>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estados
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<Processador> Processadors
		{
			get
			{
				return this.GetTable<Processador>();
			}
		}
		
		public System.Data.Linq.Table<marca> marcas
		{
			get
			{
				return this.GetTable<marca>();
			}
		}
		
		public System.Data.Linq.Table<ResoluçãoEcra> ResoluçãoEcras
		{
			get
			{
				return this.GetTable<ResoluçãoEcra>();
			}
		}
		
		public System.Data.Linq.Table<Telemovel> Telemovels
		{
			get
			{
				return this.GetTable<Telemovel>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cameras")]
	public partial class Camera : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCameras;
		
		private double _resolucaoFrontal;
		
		private double _resolucaoTraseira;
		
		private EntitySet<Telemovel> _Telemovels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCamerasChanging(int value);
    partial void OnidCamerasChanged();
    partial void OnresolucaoFrontalChanging(double value);
    partial void OnresolucaoFrontalChanged();
    partial void OnresolucaoTraseiraChanging(double value);
    partial void OnresolucaoTraseiraChanged();
    #endregion
		
		public Camera()
		{
			this._Telemovels = new EntitySet<Telemovel>(new Action<Telemovel>(this.attach_Telemovels), new Action<Telemovel>(this.detach_Telemovels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCameras", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCameras
		{
			get
			{
				return this._idCameras;
			}
			set
			{
				if ((this._idCameras != value))
				{
					this.OnidCamerasChanging(value);
					this.SendPropertyChanging();
					this._idCameras = value;
					this.SendPropertyChanged("idCameras");
					this.OnidCamerasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resolucaoFrontal", DbType="Float NOT NULL")]
		public double resolucaoFrontal
		{
			get
			{
				return this._resolucaoFrontal;
			}
			set
			{
				if ((this._resolucaoFrontal != value))
				{
					this.OnresolucaoFrontalChanging(value);
					this.SendPropertyChanging();
					this._resolucaoFrontal = value;
					this.SendPropertyChanged("resolucaoFrontal");
					this.OnresolucaoFrontalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resolucaoTraseira", DbType="Float NOT NULL")]
		public double resolucaoTraseira
		{
			get
			{
				return this._resolucaoTraseira;
			}
			set
			{
				if ((this._resolucaoTraseira != value))
				{
					this.OnresolucaoTraseiraChanging(value);
					this.SendPropertyChanging();
					this._resolucaoTraseira = value;
					this.SendPropertyChanged("resolucaoTraseira");
					this.OnresolucaoTraseiraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Camera_Telemovel", Storage="_Telemovels", ThisKey="idCameras", OtherKey="idCameras")]
		public EntitySet<Telemovel> Telemovels
		{
			get
			{
				return this._Telemovels;
			}
			set
			{
				this._Telemovels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Telemovels(Telemovel entity)
		{
			this.SendPropertyChanging();
			entity.Camera = this;
		}
		
		private void detach_Telemovels(Telemovel entity)
		{
			this.SendPropertyChanging();
			entity.Camera = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ecra")]
	public partial class Ecra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEcra;
		
		private double _tamanho;
		
		private int _idResoluçãoEcra;
		
		private EntitySet<Telemovel> _Telemovels;
		
		private EntityRef<ResoluçãoEcra> _ResoluçãoEcra;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEcraChanging(int value);
    partial void OnidEcraChanged();
    partial void OntamanhoChanging(double value);
    partial void OntamanhoChanged();
    partial void OnidResoluçãoEcraChanging(int value);
    partial void OnidResoluçãoEcraChanged();
    #endregion
		
		public Ecra()
		{
			this._Telemovels = new EntitySet<Telemovel>(new Action<Telemovel>(this.attach_Telemovels), new Action<Telemovel>(this.detach_Telemovels));
			this._ResoluçãoEcra = default(EntityRef<ResoluçãoEcra>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEcra", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEcra
		{
			get
			{
				return this._idEcra;
			}
			set
			{
				if ((this._idEcra != value))
				{
					this.OnidEcraChanging(value);
					this.SendPropertyChanging();
					this._idEcra = value;
					this.SendPropertyChanged("idEcra");
					this.OnidEcraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tamanho", DbType="Float NOT NULL")]
		public double tamanho
		{
			get
			{
				return this._tamanho;
			}
			set
			{
				if ((this._tamanho != value))
				{
					this.OntamanhoChanging(value);
					this.SendPropertyChanging();
					this._tamanho = value;
					this.SendPropertyChanged("tamanho");
					this.OntamanhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idResoluçãoEcra", DbType="Int NOT NULL")]
		public int idResoluçãoEcra
		{
			get
			{
				return this._idResoluçãoEcra;
			}
			set
			{
				if ((this._idResoluçãoEcra != value))
				{
					if (this._ResoluçãoEcra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidResoluçãoEcraChanging(value);
					this.SendPropertyChanging();
					this._idResoluçãoEcra = value;
					this.SendPropertyChanged("idResoluçãoEcra");
					this.OnidResoluçãoEcraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ecra_Telemovel", Storage="_Telemovels", ThisKey="idEcra", OtherKey="idEcra")]
		public EntitySet<Telemovel> Telemovels
		{
			get
			{
				return this._Telemovels;
			}
			set
			{
				this._Telemovels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResoluçãoEcra_Ecra", Storage="_ResoluçãoEcra", ThisKey="idResoluçãoEcra", OtherKey="idResoluçãoEcra", IsForeignKey=true)]
		public ResoluçãoEcra ResoluçãoEcra
		{
			get
			{
				return this._ResoluçãoEcra.Entity;
			}
			set
			{
				ResoluçãoEcra previousValue = this._ResoluçãoEcra.Entity;
				if (((previousValue != value) 
							|| (this._ResoluçãoEcra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResoluçãoEcra.Entity = null;
						previousValue.Ecras.Remove(this);
					}
					this._ResoluçãoEcra.Entity = value;
					if ((value != null))
					{
						value.Ecras.Add(this);
						this._idResoluçãoEcra = value.idResoluçãoEcra;
					}
					else
					{
						this._idResoluçãoEcra = default(int);
					}
					this.SendPropertyChanged("ResoluçãoEcra");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Telemovels(Telemovel entity)
		{
			this.SendPropertyChanging();
			entity.Ecra = this;
		}
		
		private void detach_Telemovels(Telemovel entity)
		{
			this.SendPropertyChanging();
			entity.Ecra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEstado;
		
		private string _designação;
		
		private EntitySet<Telemovel> _Telemovels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OndesignaçãoChanging(string value);
    partial void OndesignaçãoChanged();
    #endregion
		
		public Estado()
		{
			this._Telemovels = new EntitySet<Telemovel>(new Action<Telemovel>(this.attach_Telemovels), new Action<Telemovel>(this.detach_Telemovels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designação", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string designação
		{
			get
			{
				return this._designação;
			}
			set
			{
				if ((this._designação != value))
				{
					this.OndesignaçãoChanging(value);
					this.SendPropertyChanging();
					this._designação = value;
					this.SendPropertyChanged("designação");
					this.OndesignaçãoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Telemovel", Storage="_Telemovels", ThisKey="idEstado", OtherKey="idEstado")]
		public EntitySet<Telemovel> Telemovels
		{
			get
			{
				return this._Telemovels;
			}
			set
			{
				this._Telemovels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Telemovels(Telemovel entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Telemovels(Telemovel entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Processador")]
	public partial class Processador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProcessador;
		
		private double _velocidadeProcessador;
		
		private int _nucleosProcessador;
		
		private EntitySet<Telemovel> _Telemovels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProcessadorChanging(int value);
    partial void OnidProcessadorChanged();
    partial void OnvelocidadeProcessadorChanging(double value);
    partial void OnvelocidadeProcessadorChanged();
    partial void OnnucleosProcessadorChanging(int value);
    partial void OnnucleosProcessadorChanged();
    #endregion
		
		public Processador()
		{
			this._Telemovels = new EntitySet<Telemovel>(new Action<Telemovel>(this.attach_Telemovels), new Action<Telemovel>(this.detach_Telemovels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProcessador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idProcessador
		{
			get
			{
				return this._idProcessador;
			}
			set
			{
				if ((this._idProcessador != value))
				{
					this.OnidProcessadorChanging(value);
					this.SendPropertyChanging();
					this._idProcessador = value;
					this.SendPropertyChanged("idProcessador");
					this.OnidProcessadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_velocidadeProcessador", DbType="Float NOT NULL")]
		public double velocidadeProcessador
		{
			get
			{
				return this._velocidadeProcessador;
			}
			set
			{
				if ((this._velocidadeProcessador != value))
				{
					this.OnvelocidadeProcessadorChanging(value);
					this.SendPropertyChanging();
					this._velocidadeProcessador = value;
					this.SendPropertyChanged("velocidadeProcessador");
					this.OnvelocidadeProcessadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nucleosProcessador", DbType="Int NOT NULL")]
		public int nucleosProcessador
		{
			get
			{
				return this._nucleosProcessador;
			}
			set
			{
				if ((this._nucleosProcessador != value))
				{
					this.OnnucleosProcessadorChanging(value);
					this.SendPropertyChanging();
					this._nucleosProcessador = value;
					this.SendPropertyChanged("nucleosProcessador");
					this.OnnucleosProcessadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Processador_Telemovel", Storage="_Telemovels", ThisKey="idProcessador", OtherKey="idProcessador")]
		public EntitySet<Telemovel> Telemovels
		{
			get
			{
				return this._Telemovels;
			}
			set
			{
				this._Telemovels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Telemovels(Telemovel entity)
		{
			this.SendPropertyChanging();
			entity.Processador = this;
		}
		
		private void detach_Telemovels(Telemovel entity)
		{
			this.SendPropertyChanging();
			entity.Processador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.marca")]
	public partial class marca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMarca;
		
		private string _nome;
		
		private EntitySet<Telemovel> _Telemovels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMarcaChanging(int value);
    partial void OnidMarcaChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    #endregion
		
		public marca()
		{
			this._Telemovels = new EntitySet<Telemovel>(new Action<Telemovel>(this.attach_Telemovels), new Action<Telemovel>(this.detach_Telemovels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMarca", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMarca
		{
			get
			{
				return this._idMarca;
			}
			set
			{
				if ((this._idMarca != value))
				{
					this.OnidMarcaChanging(value);
					this.SendPropertyChanging();
					this._idMarca = value;
					this.SendPropertyChanged("idMarca");
					this.OnidMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="marca_Telemovel", Storage="_Telemovels", ThisKey="idMarca", OtherKey="idMarca")]
		public EntitySet<Telemovel> Telemovels
		{
			get
			{
				return this._Telemovels;
			}
			set
			{
				this._Telemovels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Telemovels(Telemovel entity)
		{
			this.SendPropertyChanging();
			entity.marca = this;
		}
		
		private void detach_Telemovels(Telemovel entity)
		{
			this.SendPropertyChanging();
			entity.marca = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResoluçãoEcra")]
	public partial class ResoluçãoEcra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idResoluçãoEcra;
		
		private string _designação;
		
		private EntitySet<Ecra> _Ecras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidResoluçãoEcraChanging(int value);
    partial void OnidResoluçãoEcraChanged();
    partial void OndesignaçãoChanging(string value);
    partial void OndesignaçãoChanged();
    #endregion
		
		public ResoluçãoEcra()
		{
			this._Ecras = new EntitySet<Ecra>(new Action<Ecra>(this.attach_Ecras), new Action<Ecra>(this.detach_Ecras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idResoluçãoEcra", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idResoluçãoEcra
		{
			get
			{
				return this._idResoluçãoEcra;
			}
			set
			{
				if ((this._idResoluçãoEcra != value))
				{
					this.OnidResoluçãoEcraChanging(value);
					this.SendPropertyChanging();
					this._idResoluçãoEcra = value;
					this.SendPropertyChanged("idResoluçãoEcra");
					this.OnidResoluçãoEcraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designação", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string designação
		{
			get
			{
				return this._designação;
			}
			set
			{
				if ((this._designação != value))
				{
					this.OndesignaçãoChanging(value);
					this.SendPropertyChanging();
					this._designação = value;
					this.SendPropertyChanged("designação");
					this.OndesignaçãoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResoluçãoEcra_Ecra", Storage="_Ecras", ThisKey="idResoluçãoEcra", OtherKey="idResoluçãoEcra")]
		public EntitySet<Ecra> Ecras
		{
			get
			{
				return this._Ecras;
			}
			set
			{
				this._Ecras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ecras(Ecra entity)
		{
			this.SendPropertyChanging();
			entity.ResoluçãoEcra = this;
		}
		
		private void detach_Ecras(Ecra entity)
		{
			this.SendPropertyChanging();
			entity.ResoluçãoEcra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Telemovel")]
	public partial class Telemovel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTelemovel;
		
		private double _ram;
		
		private int _memoriaInterna;
		
		private int _mAhBateria;
		
		private int _idade;
		
		private System.Nullable<int> _valorFinal;
		
		private int _idEcra;
		
		private int _idProcessador;
		
		private int _idCameras;
		
		private int _idEstado;
		
		private int _idMarca;
		
		private EntityRef<Camera> _Camera;
		
		private EntityRef<Ecra> _Ecra;
		
		private EntityRef<Estado> _Estado;
		
		private EntityRef<marca> _marca;
		
		private EntityRef<Processador> _Processador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTelemovelChanging(int value);
    partial void OnidTelemovelChanged();
    partial void OnramChanging(double value);
    partial void OnramChanged();
    partial void OnmemoriaInternaChanging(int value);
    partial void OnmemoriaInternaChanged();
    partial void OnmAhBateriaChanging(int value);
    partial void OnmAhBateriaChanged();
    partial void OnidadeChanging(int value);
    partial void OnidadeChanged();
    partial void OnvalorFinalChanging(System.Nullable<int> value);
    partial void OnvalorFinalChanged();
    partial void OnidEcraChanging(int value);
    partial void OnidEcraChanged();
    partial void OnidProcessadorChanging(int value);
    partial void OnidProcessadorChanged();
    partial void OnidCamerasChanging(int value);
    partial void OnidCamerasChanged();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OnidMarcaChanging(int value);
    partial void OnidMarcaChanged();
    #endregion
		
		public Telemovel()
		{
			this._Camera = default(EntityRef<Camera>);
			this._Ecra = default(EntityRef<Ecra>);
			this._Estado = default(EntityRef<Estado>);
			this._marca = default(EntityRef<marca>);
			this._Processador = default(EntityRef<Processador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTelemovel", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTelemovel
		{
			get
			{
				return this._idTelemovel;
			}
			set
			{
				if ((this._idTelemovel != value))
				{
					this.OnidTelemovelChanging(value);
					this.SendPropertyChanging();
					this._idTelemovel = value;
					this.SendPropertyChanged("idTelemovel");
					this.OnidTelemovelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ram", DbType="Float NOT NULL")]
		public double ram
		{
			get
			{
				return this._ram;
			}
			set
			{
				if ((this._ram != value))
				{
					this.OnramChanging(value);
					this.SendPropertyChanging();
					this._ram = value;
					this.SendPropertyChanged("ram");
					this.OnramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memoriaInterna", DbType="Int NOT NULL")]
		public int memoriaInterna
		{
			get
			{
				return this._memoriaInterna;
			}
			set
			{
				if ((this._memoriaInterna != value))
				{
					this.OnmemoriaInternaChanging(value);
					this.SendPropertyChanging();
					this._memoriaInterna = value;
					this.SendPropertyChanged("memoriaInterna");
					this.OnmemoriaInternaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mAhBateria", DbType="Int NOT NULL")]
		public int mAhBateria
		{
			get
			{
				return this._mAhBateria;
			}
			set
			{
				if ((this._mAhBateria != value))
				{
					this.OnmAhBateriaChanging(value);
					this.SendPropertyChanging();
					this._mAhBateria = value;
					this.SendPropertyChanged("mAhBateria");
					this.OnmAhBateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idade", DbType="Int NOT NULL")]
		public int idade
		{
			get
			{
				return this._idade;
			}
			set
			{
				if ((this._idade != value))
				{
					this.OnidadeChanging(value);
					this.SendPropertyChanging();
					this._idade = value;
					this.SendPropertyChanged("idade");
					this.OnidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valorFinal", DbType="Int")]
		public System.Nullable<int> valorFinal
		{
			get
			{
				return this._valorFinal;
			}
			set
			{
				if ((this._valorFinal != value))
				{
					this.OnvalorFinalChanging(value);
					this.SendPropertyChanging();
					this._valorFinal = value;
					this.SendPropertyChanged("valorFinal");
					this.OnvalorFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEcra", DbType="Int NOT NULL")]
		public int idEcra
		{
			get
			{
				return this._idEcra;
			}
			set
			{
				if ((this._idEcra != value))
				{
					if (this._Ecra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEcraChanging(value);
					this.SendPropertyChanging();
					this._idEcra = value;
					this.SendPropertyChanged("idEcra");
					this.OnidEcraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProcessador", DbType="Int NOT NULL")]
		public int idProcessador
		{
			get
			{
				return this._idProcessador;
			}
			set
			{
				if ((this._idProcessador != value))
				{
					if (this._Processador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProcessadorChanging(value);
					this.SendPropertyChanging();
					this._idProcessador = value;
					this.SendPropertyChanged("idProcessador");
					this.OnidProcessadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCameras", DbType="Int NOT NULL")]
		public int idCameras
		{
			get
			{
				return this._idCameras;
			}
			set
			{
				if ((this._idCameras != value))
				{
					if (this._Camera.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCamerasChanging(value);
					this.SendPropertyChanging();
					this._idCameras = value;
					this.SendPropertyChanged("idCameras");
					this.OnidCamerasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstado", DbType="Int NOT NULL")]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMarca", DbType="Int NOT NULL")]
		public int idMarca
		{
			get
			{
				return this._idMarca;
			}
			set
			{
				if ((this._idMarca != value))
				{
					if (this._marca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMarcaChanging(value);
					this.SendPropertyChanging();
					this._idMarca = value;
					this.SendPropertyChanged("idMarca");
					this.OnidMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Camera_Telemovel", Storage="_Camera", ThisKey="idCameras", OtherKey="idCameras", IsForeignKey=true)]
		public Camera Camera
		{
			get
			{
				return this._Camera.Entity;
			}
			set
			{
				Camera previousValue = this._Camera.Entity;
				if (((previousValue != value) 
							|| (this._Camera.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Camera.Entity = null;
						previousValue.Telemovels.Remove(this);
					}
					this._Camera.Entity = value;
					if ((value != null))
					{
						value.Telemovels.Add(this);
						this._idCameras = value.idCameras;
					}
					else
					{
						this._idCameras = default(int);
					}
					this.SendPropertyChanged("Camera");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ecra_Telemovel", Storage="_Ecra", ThisKey="idEcra", OtherKey="idEcra", IsForeignKey=true)]
		public Ecra Ecra
		{
			get
			{
				return this._Ecra.Entity;
			}
			set
			{
				Ecra previousValue = this._Ecra.Entity;
				if (((previousValue != value) 
							|| (this._Ecra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ecra.Entity = null;
						previousValue.Telemovels.Remove(this);
					}
					this._Ecra.Entity = value;
					if ((value != null))
					{
						value.Telemovels.Add(this);
						this._idEcra = value.idEcra;
					}
					else
					{
						this._idEcra = default(int);
					}
					this.SendPropertyChanged("Ecra");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Telemovel", Storage="_Estado", ThisKey="idEstado", OtherKey="idEstado", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Telemovels.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Telemovels.Add(this);
						this._idEstado = value.idEstado;
					}
					else
					{
						this._idEstado = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="marca_Telemovel", Storage="_marca", ThisKey="idMarca", OtherKey="idMarca", IsForeignKey=true)]
		public marca marca
		{
			get
			{
				return this._marca.Entity;
			}
			set
			{
				marca previousValue = this._marca.Entity;
				if (((previousValue != value) 
							|| (this._marca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._marca.Entity = null;
						previousValue.Telemovels.Remove(this);
					}
					this._marca.Entity = value;
					if ((value != null))
					{
						value.Telemovels.Add(this);
						this._idMarca = value.idMarca;
					}
					else
					{
						this._idMarca = default(int);
					}
					this.SendPropertyChanged("marca");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Processador_Telemovel", Storage="_Processador", ThisKey="idProcessador", OtherKey="idProcessador", IsForeignKey=true)]
		public Processador Processador
		{
			get
			{
				return this._Processador.Entity;
			}
			set
			{
				Processador previousValue = this._Processador.Entity;
				if (((previousValue != value) 
							|| (this._Processador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Processador.Entity = null;
						previousValue.Telemovels.Remove(this);
					}
					this._Processador.Entity = value;
					if ((value != null))
					{
						value.Telemovels.Add(this);
						this._idProcessador = value.idProcessador;
					}
					else
					{
						this._idProcessador = default(int);
					}
					this.SendPropertyChanged("Processador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
